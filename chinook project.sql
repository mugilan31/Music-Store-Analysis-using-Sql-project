use chinook;

-- 1. Customer Analysis:
/*1.Who are the top 10 spending customers, showing their total purchase amount and number of purchases?*/

SELECT C.FIRSTNAME,C.LASTNAME,COUNT(IL.QUANTITY) AS TOTAL_QUANTITY ,SUM(I.TOTAL) AS TOTAL
FROM CUSTOMER C 
JOIN INVOICE I ON C.CUSTOMERID = I.CUSTOMERID
JOIN INVOICELINE IL ON I.INVOICEID = IL.INVOICEID 
GROUP BY C.CUSTOMERID ORDER BY  TOTAL DESC LIMIT 10;


/*2.What is the average amount spent on each music genre, broken down by customer country?*/
SELECT C.COUNTRY,G.NAME ,AVG(I.TOTAL) AS TOTAL_AMOUNT 
FROM CUSTOMER C JOIN INVOICE I ON  C.CUSTOMERID = I.CUSTOMERID 
INNER JOIN INVOICELINE IL ON I.INVOICEID = IL.INVOICEID 
INNER JOIN TRACK T ON IL.TRACKID = T.TRACKID
INNER JOIN GENRE G ON T.GENREID = G.GENREID
GROUP BY C.COUNTRY, G.NAME;


-- SALES ANALYSIS
/*3.What are the top 10 best-selling albums of all time, 
showing album title, artist name, and total units sold?*/
SELECT A.TITLE AS ALBUM,AR.NAME AS ARTIST_NAME, COUNT(IV.QUANTITY) AS UNITS_SOLD
FROM INVOICELINE IV
JOIN TRACK T ON IV.TRACKID = T.TRACKID 
JOIN ALBUM A ON T.ALBUMID = A.ALBUMID 
JOIN ARTIST AR ON A.ARTISTID = AR.ARTISTID
GROUP BY A.TITLE,AR.NAME ORDER BY UNITS_SOLD DESC LIMIT 10;


-- SALES ANALYSIS
/*4.Find the media formats (e.g., Vinyl, MP3) with the least number of units
 sold overall.*/
SELECT MT.NAME AS MEDIA_TYPE, COUNT(QUANTITY) AS UNITS_SOLD
FROM MEDIATYPE MT
JOIN TRACK T ON MT.MEDIATYPEID = T.MEDIATYPEID
JOIN INVOICELINE IL ON IL.TRACKID = T.TRACKID 
GROUP BY MT.NAME ORDER BY UNITS_SOLD ASC;


/*5.What are the top artists with the most tracks in the database? Show artist name 
and total number of tracks for each artist.*/
SELECT AR.NAME, COUNT(T.TRACKID) AS TOTAL_TRACK
FROM ARTIST AR 
JOIN ALBUM A ON AR.ARTISTID = A.ARTISTID 
JOIN TRACK T ON A.ALBUMID = T.ALBUMID 
GROUP BY AR.NAME ORDER BY TOTAL_TRACK DESC;

/*6.Identify the most popular genre (by units sold) across all sales in the Chinook database.
Additionally, calculate the total revenue generated by this genre.*/

SELECT NAME AS GENRE, TOTAL_QUANTITY , TR * TOTAL_QUANTITY AS REVENUE
FROM (SELECT G.NAME, COUNT(IL.QUANTITY) AS TOTAL_QUANTITY,AVG(IL.UNITPRICE) AS TR
FROM GENRE G 
JOIN TRACK T ON G.GENREID = T.GENREID
JOIN INVOICELINE IL ON T.TRACKID = IL.TRACKID
GROUP BY G.NAME 
ORDER BY TOTAL_QUANTITY DESC LIMIT 10) AS A
GROUP BY NAME ;


/*7.What are the tracks with the longest and shortest durations? Show track title, artist name, 
and duration (in milliseconds) for each.*/

SELECT T.Name AS TrackTitle, AR.Name AS Artist_Name, (T.Milliseconds) AS Duration
FROM Track T
JOIN Album A ON A.AlbumId = T.AlbumId
JOIN Artist AR ON AR.ArtistId = A.ArtistId
WHERE T.Milliseconds = (
    SELECT MAX(Milliseconds) FROM Track
)
or T.Milliseconds = (
    SELECT MIN(Milliseconds) FROM Track
);


/*8.What are the top 10 artists with the most total sales
Show artist name and total sales amount.*/
WITH TOPARTISTSALES AS(
SELECT AR.NAME AS ARTIST_NAME, 
SUM(IL.UNITPRICE * IL.QUANTITY) AS TOTAL_SALES
FROM INVOICELINE IL 
INNER JOIN TRACK T ON IL.TRACKID = T.TRACKID
INNER JOIN ALBUM A ON T.ALBUMID = A.ALBUMID
INNER JOIN ARTIST AR ON A.ARTISTID = AR.ARTISTID
GROUP BY ARTIST_NAME)
SELECT * FROM TOPARTISTSALES 
ORDER BY TOTAL_SALES DESC LIMIT 10;


/*9.What are the albums containing more than 20 tracks? Show information 
like album title, number of tracks.*/
SELECT A.TITLE AS ALBUM_TITLE,
(SELECT COUNT(*) FROM TRACK T2 
	WHERE T2.ALBUMID = A.ALBUMID) 
	AS TOTAL_TRACKS 
FROM ALBUM A 
WHERE A.ALBUMID IN 
(SELECT  A.ALBUMID
FROM ALBUM A
JOIN TRACK T ON T.ALBUMID = A.ALBUMID
GROUP BY A.ALBUMID HAVING COUNT(*)>20);
















/*9.Find the top 3 most popular genres (by units sold) 
for each year in the database*/
SELECT DISTINCT(G.NAME) AS GENRE_NAME , COUNT(IL.QUANTITY ) OVER(partition by G.NAME) as TOTAL_QUANTITY, 
ROW_NUMBER()OVER(PARTITION BY YEAR(I.INVOICEDATE)),YEAR(I.INVOICEDATE)
FROM GENRE G
JOIN TRACK T ON G.GENREID = T.GENREID 
JOIN INVOICELINE IL ON T.TRACKID = IL.TRACKID
JOIN INVOICE I ON IL.INVOICEID = I.INVOICEID;




